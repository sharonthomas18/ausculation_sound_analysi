#Wavelet Shrinkage Denoising

import glob
import numpy as np
import pywt #Lee et al., (2019). PyWavelets: A Python package for wavelet analysis. Journal of Open Source Software, 4(36), 1237, https://doi.org/10.21105/joss.01237
from pydub import AudioSegment # Copyright Â© 2011 James Robert, http://jiaaro.com
from scipy.io import wavfile

start = time.time()
# Enter path with the folder with all wav files
path = r'C:\Users\user\Documents\project\recordings\*.wav'

for file in glob.glob(path):
    # Read file; fs - sampling frequency; data - signal
    fs, data = wavfile.read(file)
    x = 0;
    y = 2;

    for m in range(1, 5):
        try:
            t1 = x * 1000  # Works in milliseconds
            t2 = y * 1000
            newAudio = AudioSegment.from_wav(file)
            # Divide signal into 2s segments
            newAudio = newAudio[t1:t2]
            newAudio.export('newSound.wav', format="wav")
            fs1, data1 = wavfile.read('newSound.wav')
            x = x + 2
            y = y + 2
            # Wavelet shrinkage denoising
            ca, cd = pywt.dwt(data, 'db8', 'sym', 0)
            cat = pywt.threshold(ca, np.std(ca) / 2, 'soft')
            cdt = pywt.threshold(cd, np.std(cd) / 2, 'soft')
            ts_rec = pywt.idwt(cat, cdt, 'db8', 'sym', 0)
            # Wavelet Multiresolution decomposition
            coeffs = pywt.wavedec(ts_rec, 'db8', level=7)
        except:
            pass
